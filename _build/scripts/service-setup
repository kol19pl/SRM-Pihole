### Generic variables and functions
### -------------------------------

if [ -z "${SYNOPKG_PKGNAME}" ] || [ -z "${SYNOPKG_DSM_VERSION_MAJOR}" ]; then
  echo "Error: Environment variables are not set." 1>&2;
  echo "Please run me using synopkg instead. Example: \"synopkg start [packagename]\"" 1>&2;
  exit 1
fi

USER="cloudflared"
EFF_USER="sc-cloudflared"


# define SYNOPKG_PKGVAR for compatibility with DSM7
SYNOPKG_PKGVAR="${SYNOPKG_PKGDEST}/var"

# start-stop-status script redirect stdout/stderr to LOG_FILE
LOG_FILE="${SYNOPKG_PKGVAR}/${SYNOPKG_PKGNAME}.log"

# Service command has to deliver its pid into PID_FILE
PID_FILE="${SYNOPKG_PKGVAR}/${SYNOPKG_PKGNAME}.pid"


### Package specific variables and functions
### ----------------------------------------

TOKEN_FILE="${SYNOPKG_PKGVAR}/token"
CONFIG_FILE="${SYNOPKG_PKGVAR}/config.yml"

SERVICE_COMMAND="${SYNOPKG_PKGDEST}/bin/cloudflared tunnel --config ${SYNOPKG_PKGVAR}/config.yml run"
SVC_BACKGROUND=y
SVC_WRITE_PID=y

service_postinst() 
{
    if [ "${SYNOPKG_PKG_STATUS}" == "INSTALL" ]; then

        # Populate config template
        sed -i -e "s|@token@|${wizard_cloudflared_token}|g" \
            -e "s|@management-diagnostics@|${wizard_management_diagnostics}|g" \
            -e "s|@post-quantum@|${wizard_pq}|g" \
            -e "s|@edge-ip-version@|${wizard_edge_ip_version}|g" \
            ${CONFIG_FILE}

    fi
}

service_postupgrade() 
{
    # Migrate from token file if exists
    if [ -e $TOKEN_FILE ]; then
        echo "Migrate token into ${CONFIG_FILE} and delete ${TOKEN_FILE}"
        CLOUDFLARED_TOKEN="$(cat $TOKEN_FILE)"
        rm -f $TOKEN_FILE
        sed -i -e "s|@token@|${CLOUDFLARED_TOKEN}|g" \
            -e "s|@management-diagnostics@|false|g" \
            -e "s|@post-quantum@|false|g" \
            -e "s|@edge-ip-version@|4|g" \
            ${CONFIG_FILE}
    fi
}
